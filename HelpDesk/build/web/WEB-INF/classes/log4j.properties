# HOW TO USE LOG4J WITHIN ECLIPSE IN 10 MINUTES
# by Daniel Gonzalez Gasull  gasull[at]gmail[dot]com
#
# 1) Download log4j [url]http://logging.apache.org/log4j/1.2/download.html[/url]
# 2) Unpack the .zip file in your Java folder (In Windows it is usually 
# C:\Program Files\Java\)
# 3) In Eclipse: Window - Preferences... - Java - Build Path - User Libraries - 
# New - write "log4j" - OK - Add JARs... - navigate to find your log4j .jar you just
# unpacked in the Java Folder - OK 
# 4) right click on your project in the Package Explorer - New - Folder - 
# in "Folder name" write "log4j" - click Advanced - select "Link to a folder in the
# file system" - create a new folder "log4j" in your project folder in the file system
# 5) Place this file you are reading right now in in the folder you just created.  Name
# the file as log4j.properties
# 6) In Eclipse: Run - Run Configurations - In the navigation bar on the left select either the 
# server, or the runnable class, or the JUnit test you want to log with log4j -
# select the Classpath tab - User Entries - Advanced... - Add folders - OK - select 
# the "log4j" folder you created in your project - OK
#
# A partir daqui sera possivel utilizar o Jena, se nao deseja que fique aparecendo DEBUG
# na tela, entao altere o nivel de log (DEBUG, WARN, etc) ou retire a linha log4j.appender.O.Threshold=DEBUG
# para mais informacoes acesse http://hotwork.sourceforge.net/hotwork/manual/log4j/log4j-user-guide.html#Appender
# continue seguindo os passos abaixo se voce sabe o que esta fazendo 
#
#
# 7) Repeat step 6 for other servers, runnable classes or JUnit tests you want to log
# 8) Change in the following line the "org.example.foo.bar" with whatever you want.
log4j.category.de.scheffler.cpeditor.ApplicationWorkbenchWindowAdvisor=DEBUG
# 9) Add the following import to the Java Class you want to log:
#	import org.apache.log4j.Logger;
# 10) Add this lines to the Java Class you want to log:
#	/**
#	 * Log4j logger
#	 */
#	static Logger log4j = Logger.getLogger("org.example.foo.bar");
# 11) Substitute in the code above "org.example.foo.bar" with whatever your wrote in
# in the step 8.
# 12) Add something like the following code in your Class whenever you want to log:
#	log4j.debug("WTF?");
# 13) Repeat steps 9, 10, 11 and 12 for every Java Class you want to log
# 14) Enjoy!


log4j.rootCategory=DEBUG, R, O

# Stdout
log4j.appender.O=org.apache.log4j.ConsoleAppender
log4j.appender.O.Threshold=FATAL

# File
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=log4j.log

# Control the maximum log file size
log4j.appender.R.MaxFileSize=1000KB

# Archive log files (one backup file here)
log4j.appender.R.MaxBackupIndex=1

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.O.layout=org.apache.log4j.PatternLayout

log4j.appender.R.layout.ConversionPattern=[%d{ISO8601}]%5p%6.6r[%t]%x - %C.%M(%F:%L) - %m%n
log4j.appender.O.layout.ConversionPattern=[%d{ISO8601}]%5p%6.6r[%t]%x - %C.%M(%F:%L) - %m%n
